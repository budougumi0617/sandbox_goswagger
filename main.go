package main

import (
	"github.com/budougumi0617/sandbox_goswagger/controller"
	"log"
	"net"
	"os"

	"github.com/budougumi0617/sandbox_goswagger/gen/restapi"
	"github.com/budougumi0617/sandbox_goswagger/gen/restapi/operations"
	"github.com/go-openapi/loads"
	flags "github.com/jessevdk/go-flags"
)

// This file was generated by the swagger tool.
// Make sure not to overwrite this file after you generated it because all your edits would be lost!

func main() {
	// 自動生成でできるmainにあるからやっているが、これがMustな処理なのか正直わからない。
	// ２つのJSONデータも差分がない。
	swaggerSpec, err := loads.Embedded(restapi.SwaggerJSON, restapi.FlatSwaggerJSON)
	if err != nil {
		log.Fatalln(err)
	}

	h := restapi.ConfigureAPI(operations.NewSampleAPI(swaggerSpec))
	l, err := net.Listen("http", ":80")
	if err != nil {
		log.Fatalln(err)
	}
	server := controller.NewServer(l, h)

	parser := flags.NewParser(server, flags.Default)
	parser.ShortDescription = "Sample API"
	parser.LongDescription = swaggerSpec.Spec().Info.Description
	server.ConfigureFlags()
	for _, optsGroup := range api.CommandLineOptionsGroups {
		_, err := parser.AddGroup(optsGroup.ShortDescription, optsGroup.LongDescription, optsGroup.Options)
		if err != nil {
			log.Fatalln(err)
		}
	}

	if _, err := parser.Parse(); err != nil {
		code := 1
		if fe, ok := err.(*flags.Error); ok {
			if fe.Type == flags.ErrHelp {
				code = 0
			}
		}
		os.Exit(code)
	}

	server.ConfigureAPI()

	if err := server.Serve(); err != nil {
		log.Fatalln(err)
	}

}
